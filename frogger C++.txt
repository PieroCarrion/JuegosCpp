// La meta esta en este caracter " "

#include "stdafx.h"
#include <iostream>
#include <conio.h>
#include <windows.h>


#define IZQUIERDA 75
#define ARRIBA 72
#define DERECHA 77
#define ABAJO 80
#define EJES 44


using namespace System;
using namespace std;

int x = 21, y = 38;
//Obstaculos 
int ox1 = 10, oy1 = 10;
int ox1_3 = 10, oy1_3 = 14;
int ox1_4 = 10, oy1_4 = 20;
int ox1_5 = 10, oy1_5 = 21;
int ox1_6 = 10, oy1_6 = 25;
int ox1_7 = 10, oy1_7 = 26;
//Vidas
int vidas = 3;
//
int nivel = 1;
int mapa[EJES][EJES];

//Mapas del juego
void map1();
void map2();
void map3();
void map4();
void map5();
void imprimir_mapas();

//Los obstáculos
void dibujar_obstaculos(int &ex, int &ey);
void eliminarobs_rastros(int &ex, int &ey);
void movimiento(int &ex, int &ey, int &dx);

void dibujar_obstaculos3(int &ex, int &ey);
void eliminarobs_rastros3(int &ex, int &ey);
void movimiento3(int &ex, int &ey, int &dx);

void dibujar_obstaculos4(int &ex, int &ey);
void eliminarobs_rastros4(int &ex, int &ey);
void movimiento4(int &ex, int &ey, int &dx);

void dibujar_obstaculos5(int &ex1, int &ey1);
void eliminarobs_rastros5(int &ex1, int &ey1);
void movimiento5(int &ex1, int &ey1, int &dx1);

void dibujar_obstaculos6(int &ex, int &ey);
void eliminarobs_rastros6(int &ex, int &ey);
void movimiento6(int &ex, int &ey, int &dx);

void dibujar_obstaculos7(int &ex2, int &ey2);
void eliminarobs_rastros7(int &ex2, int &ey2);
void movimiento7(int &ex2, int &ey2, int &dx2);
void cronometro();
//Función para generar el desplazamiento
void desplazamiento(int tecla, int &x, int &y, int &dx, int &dx1, int &dx2);
//Rana
void rana();
void eliminar_rana();

void main()
{
	int tecla;
	int dx = -1;
	int dx1 = -1;
	int dx2 = -1;
	Console::Title = "Frogger in cpp";
	Console::SetWindowSize(EJES, EJES);
	Console::CursorVisible = false;
	map1();
	imprimir_mapas();
	desplazamiento(tecla, x, y, dx, dx1, dx2);
	/*thread t1(&cronometro);
	t1.join();*/
	_getch();
}

void desplazamiento(int tecla, int &x, int &y, int &dx, int &dx1, int &dx2)
{
	rana();
	dibujar_obstaculos(ox1, oy1);
	dibujar_obstaculos3(ox1_3, oy1_3);
	dibujar_obstaculos4(ox1_4, oy1_4);
	dibujar_obstaculos5(ox1_5, oy1_5);
	dibujar_obstaculos6(ox1_6, oy1_6);
	dibujar_obstaculos7(ox1_7, oy1_7);

	while (true)
	{
		_sleep(100);
		eliminarobs_rastros(ox1, oy1);
		eliminarobs_rastros3(ox1_3, oy1_3);
		eliminarobs_rastros4(ox1_4, oy1_4);
		eliminarobs_rastros5(ox1_5, oy1_5);
		eliminarobs_rastros6(ox1_6, oy1_6);
		eliminarobs_rastros7(ox1_7, oy1_7);

		if (kbhit()) {
			tecla = getch();
			eliminar_rana();
			switch (tecla)
			{
			case DERECHA:
				if (mapa[y][x + 1] == 1)
				{
					x++;
				}
				break;
			case IZQUIERDA:
				if (mapa[y][x -1] == 1)
				{
					x--;
				}
				break;
			case ARRIBA:
				if (mapa[y-1][x] == 1)
				{
					y--;
				}
				break;
			case ABAJO:
				if (mapa[y+1][x] == 1)
				{
					y++;
				}
				break;

			case 'x':case 'X':
				system("cls");
				cout << "THANKS FOR PLAYING" << endl;
				cout << "GOOD-BYE";
				Sleep(2000); exit(0);
				break;
			}
			rana();
		}

		movimiento(ox1, oy1, dx);
		movimiento3(ox1_3, oy1_3, dx);
		movimiento4(ox1_4, oy1_4, dx);
		movimiento5(ox1_5, oy1_5, dx1);
		movimiento6(ox1_6, oy1_6, dx);
		movimiento7(ox1_7, oy1_7, dx2);

		dibujar_obstaculos(ox1, oy1);
		dibujar_obstaculos3(ox1_3, oy1_3);
		dibujar_obstaculos4(ox1_4, oy1_4);
		dibujar_obstaculos5(ox1_5, oy1_5);
		dibujar_obstaculos6(ox1_6, oy1_6);
		dibujar_obstaculos7(ox1_7, oy1_7);
		/*
		Console::SetCursorPosicition(2,47);
		cout<<"Vidas: "<<vidas<<endl;
		if (x == ox1&&y == oy1)
		{
		vidas--;

		}
		cout<<"Vidas: "<<vidas<<endl;
		if(vidas==0){
		cout<<"You Lose"<<;Sleep(100);exit(0);
		*/
		if (mapa[y - 1][x] == 6)
		{
			if (nivel == 0)
			{
				Console::Clear();
				map2();
				imprimir_mapas();
				x = 21; y = 38;
				rana();

			}
			else if (nivel == 1)
			{
				Console::Clear();
				map3();
				imprimir_mapas();
				x = 21; y = 38;
				rana();
			}
			else if (nivel == 2)
			{
				Console::Clear();
				map4();
				imprimir_mapas();
				x = 21; y = 38;
				rana();
			}
			else if (nivel == 3)
			{
				Console::Clear();
				map5();
				imprimir_mapas();
				x = 21; y = 38;
				rana();
			}
			else if (nivel == 4)
			{
				Console::Clear();
				char mes[20] = "YOU WIN ";

				for (int a = 0; a < 22; a++)
				{
					Console::Clear();
					Console::SetCursorPosition(a, 5);
					cout << mes;
					Sleep(100);
				}
				for (int b = 22; b > 0; b--)
				{
					Console::Clear();
					Console::SetCursorPosition(b, 5);
					cout << mes;
					Sleep(100);
				}


			}
		}
	}
}


void rana()
{
	Console::SetCursorPosition(x, y);
	Console::ForegroundColor = ConsoleColor::DarkGreen;
	cout << (char)219;

}
void eliminar_rana()
{
	Console::SetCursorPosition(x, y);
	Console::ForegroundColor = ConsoleColor::Gray;
	cout << (char)219;
}
//
void map1()
{
	int matriz1[EJES][EJES] = {
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
		{ 2,2,6,6,6,6,6,6,2,2,6,6,6,6,6,6,6,2,2,6,6,6,6,6,6,6,2,2,6,6,6,6,6,6,6,2,2,6,6,6,6,6,2,2 },
		{ 2,2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,4,5,4,1,1,1,1,1,1,1,1,4,5,4,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,3,1,1,1,1,1,1,1,1,1,1,1,4,5,5,5,4,1,1,1,1,1,1,4,5,5,5,4,1,1,1,1,1,1,1,1,1,1,1,3,2,2 },
		{ 2,2,3,3,3,1,1,1,1,1,1,1,1,1,1,4,4,4,1,1,1,1,1,1,1,1,4,4,4,1,1,1,1,1,1,1,1,1,1,3,3,3,2,2 },
		{ 2,2,3,3,3,3,3,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,3,3,3,3,3,2,2 },
		{ 2,2,3,3,3,3,3,3,3,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,3,3,3,3,3,3,3,2,2 },
		{ 2,2,3,3,3,3,3,3,3,3,3,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,3,3,3,3,3,3,3,3,3,2,2 },
		{ 2,2,3,3,3,3,3,3,3,3,3,3,3,1,1,1,3,1,1,1,1,1,1,1,1,1,1,3,1,1,1,3,3,3,3,3,3,3,3,3,3,3,2,2 },
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }, };

	for (int i = 0; i < EJES; i++)
	{
		for (int j = 0; j < EJES; j++)
		{
			mapa[i][j] = matriz1[i][j];
		}
	}
	nivel = 0;
}
void map2()
{
	int matriz2[EJES][EJES] = {
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
		{ 2,2,6,6,6,6,6,6,2,2,6,6,6,6,6,6,6,2,2,6,6,6,6,6,6,6,2,2,6,6,6,6,6,6,6,2,2,6,6,6,6,6,2,2 },
		{ 2,2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2 },
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 },
		{ 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2 }, };

	for (int i = 0; i < EJES; i++)
	{
		for (int j = 0; j < EJES; j++)
		{
			mapa[i][j] = matriz2[i][j];
		}
	}
	nivel = 1;
}
void map3()
{
	int matriz3[EJES][EJES] = {
		{ 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3 },
		{ 3,3,6,6,6,6,6,6,3,3,6,6,6,6,6,6,6,3,3,6,6,6,6,6,6,6,3,3,6,6,6,6,6,6,6,3,3,6,6,6,6,6,3,3 },
		{ 3,3,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,3,3,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,3,3,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3 },
		{ 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3 },
		{ 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3 }, };

	for (int i = 0; i < EJES; i++)
	{
		for (int j = 0; j < EJES; j++)
		{
			mapa[i][j] = matriz3[i][j];
		}
	}
	nivel = 2;
}
void map4()
{
	int matriz4[EJES][EJES] = {

		{ 5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5 },
		{ 5,6,6,6,6,6,6,6,5,5,6,6,6,6,6,6,6,5,5,6,6,6,6,6,6,6,5,5,6,6,6,6,6,6,6,5,5,6,6,6,6,6,6,5 },
		{ 5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,5 },
		{ 5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,5 },
		{ 5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,1,5,5,1,1,1,1,1,1,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5 },
		{ 5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5 },
		{ 5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5 },
		{ 5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5 },
		{ 5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5 },
	};
	for (int i = 0; i < EJES; i++)
	{
		for (int j = 0; j < EJES; j++)
		{
			mapa[i][j] = matriz4[i][j];
		}
	}
	nivel = 3;
}
void map5()
{
	int matriz5[EJES][EJES] = {
		{ 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7 },
		{ 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7 },
		{ 7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7 },
		{ 7,5,7,7,7,5,7,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7,7,5,7,7,7,5,7 },
		{ 7,5,7,7,7,5,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7,5,7,7,7,5,7 },
		{ 7,5,7,5,7,5,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,5,7,5,7,5,7 },
		{ 7,5,5,7,5,5,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,5,5,7,5,5,7 },
		{ 7,5,7,7,7,5,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,5,7,7,7,5,7 },
		{ 7,7,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7,7,7 },
		{ 7,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7,7 },
		{ 7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7 },
		{ 7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7 },
		{ 7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7 },
		{ 7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,7,7 },
		{ 7,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7,7 },
		{ 7,7,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7,7,7 },
		{ 7,7,7,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7,7,7,7 },
		{ 7,7,5,7,7,7,5,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,5,7,7,7,5,7,7 },
		{ 7,7,5,7,7,7,5,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,5,7,7,7,5,7,7 },
		{ 7,7,5,7,5,7,5,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7,5,7,5,7,5,7,7 },
		{ 7,7,5,5,7,5,5,7,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,7,7,7,7,5,5,7,5,5,7,7 },
		{ 7,7,5,7,7,7,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,7,7,7,5,7,7 },
		{ 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7 },

	};
	for (int i = 0; i < EJES; i++)
	{
		for (int j = 0; j < EJES; j++)
		{
			mapa[i][j] = matriz5[i][j];
		}
	}
	nivel = 4;
}
void imprimir_mapas()
{
	for (int i = 0; i < EJES; i++)
	{
		for (int j = 0; j < EJES; j++)
		{
			Console::SetCursorPosition(j, i);
			if (mapa[i][j] == 1) {
				Console::ForegroundColor = ConsoleColor::Gray;
				cout << char(219);
			}
			if (mapa[i][j] == 2) {
				Console::ForegroundColor = ConsoleColor::DarkRed;
				cout << char(219);
			}
			if (mapa[i][j] == 3) {
				Console::ForegroundColor = ConsoleColor::DarkGray;
				cout << char(219);
			}
			if (mapa[i][j] == 4) {
				Console::ForegroundColor = ConsoleColor::Red;
				cout << char(219);
			}
			if (mapa[i][j] == 5) {
				Console::ForegroundColor = ConsoleColor::Yellow;
				cout << char(219);
			}
			if (mapa[i][j] == 6) {
				Console::ForegroundColor = ConsoleColor::Magenta;
				cout << char(4);
			}
			if (mapa[i][j] == 7) {
				Console::ForegroundColor = ConsoleColor::DarkCyan;
				cout << char(219);
			}
			if (mapa[i][j] == 9) {
				Console::ForegroundColor = ConsoleColor::Blue;
				cout << char(219);
			}
		}
	}
}
//
void dibujar_obstaculos(int &ex, int &ey)
{
	Console::SetCursorPosition(ex, ey);
	Console::ForegroundColor = ConsoleColor::DarkMagenta;
	cout << char(219) << char(219);
}
void eliminarobs_rastros(int &ex, int &ey)
{
	Console::SetCursorPosition(ex, ey);
	Console::ForegroundColor = ConsoleColor::Gray;
	cout << char(219) << char(219);
}
void movimiento(int &ex, int &ey, int &dx)
{

	ex = ex + dx;
	if (mapa[ey][ex + dx] == 2 || ex == 6 || ex == 35 || mapa[ey][ex + dx] == 3 || mapa[ey][ex + dx] == 5 || mapa[ey][ex + dx] == 7)
	{
		dx = dx*(-1);
	}
}
void dibujar_obstaculos3(int &ex, int &ey) {
	Console::SetCursorPosition(ex, ey);
	Console::ForegroundColor = ConsoleColor::DarkRed;
	cout << char(219) << char(219);
}
void eliminarobs_rastros3(int &ex, int &ey) {
	Console::SetCursorPosition(ex, ey);
	Console::ForegroundColor = ConsoleColor::Gray;
	cout << char(219) << char(219);
}
void movimiento3(int &ex, int &ey, int &dx) {

	ex += dx;
	if (mapa[ey][ex + dx] == 2 || ex == 6 || ex == 38 || mapa[ey][ex + dx] == 3 || mapa[ey][ex + dx] == 5 || mapa[ey][ex + dx] == 7)
	{
		dx = dx*(-1);
	}
}

void dibujar_obstaculos4(int &ex, int &ey) {
	Console::SetCursorPosition(ex, ey);
	Console::ForegroundColor = ConsoleColor::DarkBlue;
	cout << char(219) << char(219);
}
void eliminarobs_rastros4(int &ex, int &ey) {
	Console::SetCursorPosition(ex, ey);
	Console::ForegroundColor = ConsoleColor::Gray;
	cout << char(219) << char(219);
}
void movimiento4(int &ex, int &ey, int &dx) {

	ex += dx;
	if (mapa[ey][ex + dx] == 2 || ex == 6 || ex == 38 || mapa[ey][ex + dx] == 3 || mapa[ey][ex + dx] == 5 || mapa[ey][ex + dx] == 7)
	{
		dx = dx*(-1);
	}
}

void dibujar_obstaculos6(int &ex, int &ey) {
	Console::SetCursorPosition(ex, ey);
	Console::ForegroundColor = ConsoleColor::Black;
	cout << char(219) << char(219);
}
void eliminarobs_rastros6(int &ex, int &ey) {
	Console::SetCursorPosition(ex, ey);
	Console::ForegroundColor = ConsoleColor::Gray;
	cout << char(219) << char(219);
}
void movimiento6(int &ex, int &ey, int &dx) {

	ex = ex + dx;
	if (mapa[ey][ex + dx] == 2 || ex == 6 || ex == 38 || mapa[ey][ex + dx] == 3 || mapa[ey][ex + dx] == 5 || mapa[ey][ex + dx] == 7)
	{
		dx = dx*(-1);
	}
}
void dibujar_obstaculos7(int &ex2, int &ey2) {
	Console::SetCursorPosition(ex2, ey2);
	Console::ForegroundColor = ConsoleColor::DarkBlue;
	cout << char(219) << char(219);
}
void eliminarobs_rastros7(int &ex2, int &ey2) {
	Console::SetCursorPosition(ex2, ey2);
	Console::ForegroundColor = ConsoleColor::Gray;
	cout << char(219) << char(219);
}
void movimiento7(int &ex2, int &ey2, int &dx2) {
	ex2 = ex2 + dx2;
	if (mapa[ey2][ex2 + dx2] == 2 || ex2 == 4 || ex2 == 40 || mapa[ey2][ex2 + dx2] == 3 || mapa[ey2][ex2 + dx2] == 5 || mapa[ey2][ex2 + dx2] == 7)
	{
		dx2 = dx2*(-1);
	}

}
void dibujar_obstaculos5(int &ex1, int &ey1) {
	Console::SetCursorPosition(ex1, ey1);
	Console::ForegroundColor = ConsoleColor::DarkBlue;
	cout << char(219) << char(219);
}
void eliminarobs_rastros5(int &ex1, int &ey1) {
	Console::SetCursorPosition(ex1, ey1);
	Console::ForegroundColor = ConsoleColor::Gray;
	cout << char(219) << char(219);
}
void movimiento5(int &ex1, int &ey1, int &dx1) {
	ex1 = ex1 + dx1;
	if (mapa[ey1][ex1 + dx1] == 2 || ex1 == 4 || ex1 == 40 || mapa[ey1][ex1 + dx1] == 3 || mapa[ey1][ex1 + dx1] == 5 || mapa[ey1][ex1 + dx1] == 7)
	{
		dx1 = dx1*(-1);
	}

}
void cronometro()
{
	for (int h = 0; h < 12; h++)
	{
		for (int m = 0; m < 59; m++)
		{
			for (int s = 0; s < 59; s++)
			{
				Sleep(100);
				Console::SetCursorPosition(4, 3);
				cout << h << ":" << m << ":" << s;
			}
		}
	}
}








